{"ast":null,"code":"var _jsxFileName = \"/home/rguktrkvalley/my_new_project/frontend/src/components/sideComponents/Discussions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiscussionForum = () => {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    fetchThreads();\n  }, []);\n  const fetchThreads = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/threads\");\n      setThreads(response.data);\n    } catch (error) {\n      console.error(\"Error fetching threads:\", error);\n    }\n  };\n  const handleCreateThread = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/threads\", {\n        title,\n        content\n      }, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      setThreads([response.data.thread, ...threads]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (error) {\n      console.error(\"Error creating thread:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Discussion Forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateThread,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Thread Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"w-full p-2 border rounded mb-2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Thread Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        className: \"w-full p-2 border rounded mb-2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white p-2 rounded w-full\",\n        children: \"Create Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-3 mb-2 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-semibold\",\n          children: thread.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: thread.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-gray-600\",\n          children: [\"by \", thread.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, thread._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DiscussionForum, \"1JFuIqll06RqiJgi5gIl2+srQR0=\");\n_c = DiscussionForum;\nexport default DiscussionForum;\n// Fetch and display threads\nasync function fetchThreads() {\n  try {\n    const response = await fetch(\"/api/threads\");\n    const threads = await response.json();\n    const threadList = document.getElementById(\"threadList\");\n    threadList.innerHTML = \"\"; // Clear existing threads\n\n    threads.forEach(thread => {\n      const threadElement = document.createElement(\"div\");\n      threadElement.className = \"thread\";\n      threadElement.setAttribute(\"data-thread-id\", thread._id);\n      threadElement.innerHTML = `\n        <h3>${thread.title}</h3>\n        <p>${thread.content}</p>\n        <div class=\"actions\">\n          <button onclick=\"likeThread('${thread._id}')\">Like (${thread.likes.length})</button>\n          <button onclick=\"dislikeThread('${thread._id}')\">Dislike (${thread.dislikes.length})</button>\n          <a href=\"/threads/${thread._id}\">View Replies</a>\n        </div>\n      `;\n      threadList.appendChild(threadElement);\n    });\n  } catch (error) {\n    console.error(\"Error fetching threads:\", error);\n  }\n}\n\n// Like a thread\nasync function likeThread(threadId) {\n  try {\n    const response = await fetch(`/api/threads/${threadId}/like`, {\n      method: \"POST\"\n    });\n    if (response.ok) {\n      const updatedThread = await response.json();\n      updateThreadLikes(threadId, updatedThread.thread.likes.length, updatedThread.thread.dislikes.length);\n    }\n  } catch (error) {\n    console.error(\"Error liking thread:\", error);\n  }\n}\n\n// Dislike a thread\nasync function dislikeThread(threadId) {\n  try {\n    const response = await fetch(`/api/threads/${threadId}/dislike`, {\n      method: \"POST\"\n    });\n    if (response.ok) {\n      const updatedThread = await response.json();\n      updateThreadLikes(threadId, updatedThread.thread.likes.length, updatedThread.thread.dislikes.length);\n    }\n  } catch (error) {\n    console.error(\"Error disliking thread:\", error);\n  }\n}\n\n// Update like/dislike counts in the UI\nfunction updateThreadLikes(threadId, likesCount, dislikesCount) {\n  const threadElement = document.querySelector(`[data-thread-id=\"${threadId}\"]`);\n  if (threadElement) {\n    threadElement.querySelector(\".actions button:nth-child(1)\").textContent = `Like (${likesCount})`;\n    threadElement.querySelector(\".actions button:nth-child(2)\").textContent = `Dislike (${dislikesCount})`;\n  }\n}\n\n// Fetch threads on page load\nfetchThreads();\nvar _c;\n$RefreshReg$(_c, \"DiscussionForum\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DiscussionForum","_s","threads","setThreads","title","setTitle","content","setContent","user","JSON","parse","localStorage","getItem","fetchThreads","response","get","data","error","console","handleCreateThread","e","preventDefault","post","headers","Authorization","token","thread","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","author","_id","_c","fetch","json","threadList","document","getElementById","innerHTML","forEach","threadElement","createElement","setAttribute","likes","length","dislikes","appendChild","likeThread","threadId","method","ok","updatedThread","updateThreadLikes","dislikeThread","likesCount","dislikesCount","querySelector","textContent","$RefreshReg$"],"sources":["/home/rguktrkvalley/my_new_project/frontend/src/components/sideComponents/Discussions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst DiscussionForum = () => {\n  const [threads, setThreads] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    fetchThreads();\n  }, []);\n\n  const fetchThreads = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/threads\");\n      setThreads(response.data);\n    } catch (error) {\n      console.error(\"Error fetching threads:\", error);\n    }\n  };\n\n  const handleCreateThread = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/threads\",\n        { title, content },\n        {\n          headers: { Authorization: `Bearer ${user.token}` },\n        }\n      );\n      setThreads([response.data.thread, ...threads]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (error) {\n      console.error(\"Error creating thread:\", error);\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-2xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Discussion Forum</h1>\n      {user && (\n        <form onSubmit={handleCreateThread} className=\"mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Thread Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            className=\"w-full p-2 border rounded mb-2\"\n            required\n          />\n          <textarea\n            placeholder=\"Thread Content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            className=\"w-full p-2 border rounded mb-2\"\n            required\n          ></textarea>\n          <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded w-full\">\n            Create Thread\n          </button>\n        </form>\n      )}\n      <div>\n        {threads.map((thread) => (\n          <div key={thread._id} className=\"border p-3 mb-2 rounded shadow\">\n            <h2 className=\"font-semibold\">{thread.title}</h2>\n            <p>{thread.content}</p>\n            <small className=\"text-gray-600\">by {thread.author}</small>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DiscussionForum;\n// Fetch and display threads\nasync function fetchThreads() {\n  try {\n    const response = await fetch(\"/api/threads\");\n    const threads = await response.json();\n\n    const threadList = document.getElementById(\"threadList\");\n    threadList.innerHTML = \"\"; // Clear existing threads\n\n    threads.forEach((thread) => {\n      const threadElement = document.createElement(\"div\");\n      threadElement.className = \"thread\";\n      threadElement.setAttribute(\"data-thread-id\", thread._id);\n      threadElement.innerHTML = `\n        <h3>${thread.title}</h3>\n        <p>${thread.content}</p>\n        <div class=\"actions\">\n          <button onclick=\"likeThread('${thread._id}')\">Like (${thread.likes.length})</button>\n          <button onclick=\"dislikeThread('${thread._id}')\">Dislike (${thread.dislikes.length})</button>\n          <a href=\"/threads/${thread._id}\">View Replies</a>\n        </div>\n      `;\n      threadList.appendChild(threadElement);\n    });\n  } catch (error) {\n    console.error(\"Error fetching threads:\", error);\n  }\n}\n\n// Like a thread\nasync function likeThread(threadId) {\n  try {\n    const response = await fetch(`/api/threads/${threadId}/like`, { method: \"POST\" });\n    if (response.ok) {\n      const updatedThread = await response.json();\n      updateThreadLikes(threadId, updatedThread.thread.likes.length, updatedThread.thread.dislikes.length);\n    }\n  } catch (error) {\n    console.error(\"Error liking thread:\", error);\n  }\n}\n\n// Dislike a thread\nasync function dislikeThread(threadId) {\n  try {\n    const response = await fetch(`/api/threads/${threadId}/dislike`, { method: \"POST\" });\n    if (response.ok) {\n      const updatedThread = await response.json();\n      updateThreadLikes(threadId, updatedThread.thread.likes.length, updatedThread.thread.dislikes.length);\n    }\n  } catch (error) {\n    console.error(\"Error disliking thread:\", error);\n  }\n}\n\n// Update like/dislike counts in the UI\nfunction updateThreadLikes(threadId, likesCount, dislikesCount) {\n  const threadElement = document.querySelector(`[data-thread-id=\"${threadId}\"]`);\n  if (threadElement) {\n    threadElement.querySelector(\".actions button:nth-child(1)\").textContent = `Like (${likesCount})`;\n    threadElement.querySelector(\".actions button:nth-child(2)\").textContent = `Dislike (${dislikesCount})`;\n  }\n}\n\n// Fetch threads on page load\nfetchThreads();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}